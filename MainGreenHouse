import PySimpleGUI as sg

class sensor1:
  phMin = 3
  phMax = 9
  lightMin = 6
  lightMax =10
  waterMin = 500
  waterMax =1000
  waterAmount = 700
  ventiTimer = 30
  phValue = 10
  lightValue=10
  
  def ph(self, phMin, phMax, phValue):
      if sensor1.phValue > sensor1.phMax or sensor1.phValue<sensor1.phMin:
          print('neutralizing soil')
          window['pH'].update('Neutralizing soil')

layout1=[[sg.Text('Dine Planter',key='t')]]
        
layout2=[[sg.Text('Plante 1',key='t',background_color='dark sea green')],
                [sg.Image('download.png', subsample=1, k='-img-', expand_x=True)],
                [sg.Text('Plant state')],
                [sg.Text(f'Water: {sensor1.waterAmount}', k='Water')],
                [sg.Text(f'Light: {sensor1.lightValue}', k='Light')],
                [sg.Text(f'pH:{sensor1.phValue}', k='pH')],
                [sg.Button('Edit Plant settings', k='settings1')]]
layout3=[[sg.Text('Plante 2',key='t',background_color='dark sea green')],
                [sg.Image('images.png', subsample=1, k='-img-', expand_x=True)],
                [sg.Text('Plant state')],
                [sg.Text(f'Water: {sensor1.waterAmount}')],
                [sg.Text(f'pH:{sensor1.phValue}' )],
                [sg.Button('Edit Plant settings', k='settings2')]]
layout4=[[sg.Text('Plant Settings',key='t',background_color='dark sea green')],
               [sg.Text('Juster pH:')],
               [sg.InputText()],
               [sg.Text('Adjust Light levels:')],
               [sg.InputText()],
               [sg.Text('Adjust Ventilation Timer')],
               [sg.Text('Start time:'), sg.InputText()],
               [sg.Text('End Time:'), sg.InputText()]]


layout = [[sg.Column(layout1, key='-COL1-'), sg.Column(layout2, visible=False, key='-COL2-'), sg.Column(layout3, visible=False, key='-COL3-'), sg.Column(layout4, visible=True, key='-COL4-')],
          [sg.Button('1'), sg.Button('2'), sg.Button('3'), sg.Button('4'), sg.Button('Exit')]]

window = sg.Window('Swapping the contents of a window', layout)

layout = 1  # The currently visible layout
while True:
    event, values = window.read()
    print(event, values)
    if event in (None, 'Exit'):
        break
    if event == 'Cycle Layout':
        window[f'-COL{layout}-'].update(visible=False)
        layout = layout + 1 if layout < 4 else 1
        window[f'-COL{layout}-'].update(visible=True)
    elif event in '123':
        window[f'-COL{layout}-'].update(visible=False)
        layout = int(event)
        window[f'-COL{layout}-'].update(visible=True)
window.close()
